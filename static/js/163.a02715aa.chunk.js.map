{"version":3,"file":"static/js/163.a02715aa.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieGalleryItem/MovieGalleryItem.module.css?31fb","components/MovieGalleryItem/MovieGalleryItem.jsx","webpack://react-homework-template/./src/components/MovieGallery/MovieGallery.module.css?cb9b","components/MovieGallery/MovieGallery.jsx","components/utils/apiMovies.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"findedItem\":\"MovieGalleryItem_findedItem__e5UcN\",\"findedItemLink\":\"MovieGalleryItem_findedItemLink__ST38U\",\"titleMovie\":\"MovieGalleryItem_titleMovie__dvxTU\",\"imgPoster\":\"MovieGalleryItem_imgPoster__P0dTD\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from './MovieGalleryItem.module.css';\n\nexport default function MovieGalleryItem({ poster_path, title, location, id }) {\n  return (\n    <li className={css.findedItem} key={id}>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        key={id}\n        className={css.findedItemLink}\n      >\n        <div className={css.imgThumb}>\n          <img\n            className={css.imgPoster}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : `https://brinkys.gr/media/products//Image-Not-Available.png`\n            }\n            alt={title}\n            max-width=\"270\"\n            max-height=\"405\"\n          />\n        </div>\n        <h2 className={css.titleMovie}>{title}</h2>\n      </Link>\n    </li>\n  );\n}\n\nMovieGalleryItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  location: PropTypes.objectOf(PropTypes.string),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"trendingGallery\":\"MovieGallery_trendingGallery__jZjCI\"};","import PropTypes from 'prop-types';\nimport MovieGalleryItem from 'components/MovieGalleryItem';\nimport css from './MovieGallery.module.css';\n\nexport default function MovieGallery({ movies, location }) {\n  return (\n    <ul className={css.trendingGallery}>\n      {movies.map(movie => {\n        return (\n          <MovieGalleryItem\n            {...movie}\n            key={movie.id}\n            link={movie.id}\n            location={location}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nMovieGallery.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape(PropTypes.string.isRequired))\n    .isRequired,\n  location: PropTypes.objectOf(PropTypes.string),\n};\n","import axios from 'axios';\nconst KEY = '8664a2b6db354b584ef037e248f4b600';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    return await axios.get(`${BASE_URL}trending/movie/week?api_key=${KEY}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieInfo = async movieId => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    return await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US`\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Searchbar_searchForm__Bt5yh\",\"searchInput\":\"Searchbar_searchInput__+BnhG\",\"button\":\"Searchbar_button__nkcjk\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport css from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      Notiflix.Notify.warning('Please, enter your request!');\n      return;\n    }\n\n    onSubmit(query);\n    setQuery('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.searchForm}>\n      <input\n        type=\"text\"\n        autoComplete=\"off\"\n        name=\"search\"\n        autoFocus\n        placeholder=\"search movie\"\n        value={query}\n        onChange={handleQueryChange}\n        className={css.searchInput}\n      />\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../components/utils/apiMovies';\nimport Notiflix from 'notiflix';\nimport Searchbar from 'components/Searchbar';\nimport MovieGallery from 'components/MovieGallery';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchMoviesByQuery(searchQuery)\n      .then(results => {\n        if (!results.length) {\n          Notiflix.Notify.warning('Nothing found for your request, try again');\n          return;\n        }\n\n        setMovies(results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [searchQuery]);\n\n  const handleFormSubmit = query => {\n    setSearchParams({ query: query.trim() });\n    setMovies([]);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {movies && <MovieGallery movies={movies} link={''} location={location} />}\n    </div>\n  );\n}\n"],"names":["MovieGalleryItem","poster_path","title","location","id","className","css","to","state","from","src","alt","MovieGallery","movies","map","movie","key","link","KEY","BASE_URL","fetchTrendingMovies","axios","console","log","fetchMoviesByQuery","query","response","data","results","fetchMovieInfo","movieId","fetchMovieCast","fetchMovieReviews","Searchbar","onSubmit","useState","setQuery","event","preventDefault","trim","Notiflix","type","autoComplete","name","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","Movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useLocation","useEffect","then","length","catch","error"],"sourceRoot":""}